buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.6.3'
    }
}

apply plugin: 'com.android.library'


android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        applicationId 'org.piwik.sdk'
        minSdkVersion 7
        targetSdkVersion 19
        versionCode 1
        versionName '0.0.1'
    }
}

apply plugin: 'android-unit-test'

dependencies {
    repositories {
        mavenCentral()
    }

    compile 'com.android.support:support-v4:20.0.0'
    testCompile 'com.android.support:support-v4:20.0.0'
    testCompile 'junit:junit:4.11'
    testCompile 'org.robolectric:robolectric:2.+'
    testCompile 'com.squareup:fest-android:1.0.+'
}

/**
 * JAR
 */

task clearJar(type: Delete) {
    delete 'jar/PiwikAndroidSdk.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('jar/')
    include('classes.jar')
    rename ('classes.jar', 'PiwikAndroidSdk.jar')
}

makeJar.dependsOn(clearJar, build)

/**
 * Coverage
 */


apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
    }
}

def coverageSourceDirs = [
    'src/main/java',
]

task jacocoTestReport(type: JacocoReport) {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = false
    }
    classDirectories = fileTree(
        dir: './build/intermediates/classes/release',
        excludes: ['org/piwik/R*.class',
                   '**/*BuildConfig.java',
                   '**/*$InjectAdapter.class',
                   '**/*$ModuleAdapter.class',
                   '**/*$ViewInjector*.class'
        ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File('piwik_sdk/build/intermediates/classes/').eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}